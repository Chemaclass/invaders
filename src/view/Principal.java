package view;

import controller.Juego;
import controller.Juego.Dificultad;
import controller.Partida;
import controller.Partida.Estado;
import dao.DAO;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.ListModel;
import main.Decorador;
import main.Main;
import model.Movimientos;
import model.disparador.Nave;

/**
 *
 * @author chema
 */
public class Principal extends javax.swing.JDialog {
      
    private DAO dao;
    private Decorador decorador;
    private Partida partida;
    private Juego juego;
    private List<Nave> naves;
    
    private int newNivel;
    private int newDificultad;
    private int newNNaves,
            newNFilas,
            newNColum;
    
    public Principal(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
        initComponents2();
    }
    
    private void initComponents2(){
        //Cargamos el objeto DAO para interacturar con la DB
        dao = DAO.getInstance(lblInfoGuardar);
        //Cargamos todos los movimientos
        cbMovimientos.setModel(dao.selectAllMovimientos());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgNumJug = new javax.swing.ButtonGroup();
        bgModoJuego = new javax.swing.ButtonGroup();
        bgControles = new javax.swing.ButtonGroup();
        bgDificultad = new javax.swing.ButtonGroup();
        imgHeader = new javax.swing.JLabel();
        tpConfiguracion = new javax.swing.JTabbedPane();
        jPanelBienvenido = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblNumJugadores = new javax.swing.JLabel();
        lblNumInvasores = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblNivel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        lblDificultad = new javax.swing.JLabel();
        panelInstrucciones = new javax.swing.JPanel();
        tpIntrucciones = new javax.swing.JTabbedPane();
        spBasicos = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        spGuardarInstrucciones = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        spInvasores = new javax.swing.JScrollPane();
        jPanel8 = new javax.swing.JPanel();
        jLabel57 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        spTienda = new javax.swing.JScrollPane();
        jPanel9 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        spConfiguracionJuego = new javax.swing.JScrollPane();
        jPanel10 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jPanelConfiguracion = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rbFacil = new javax.swing.JRadioButton();
        rbMedio = new javax.swing.JRadioButton();
        rbPro = new javax.swing.JRadioButton();
        jLabelDificultad = new javax.swing.JLabel();
        sNivel = new javax.swing.JSpinner();
        lblNumeroDeJugadores1 = new javax.swing.JLabel();
        rb1Jugador = new javax.swing.JRadioButton();
        rb2Jugadores = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        cbPorDefecto = new javax.swing.JCheckBox();
        sFilas = new javax.swing.JSpinner();
        lblFilas = new javax.swing.JLabel();
        lblColum = new javax.swing.JLabel();
        sColum = new javax.swing.JSpinner();
        jPanelControles = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btGuardarControles = new javax.swing.JButton();
        rbNave2 = new javax.swing.JRadioButton();
        rbNave1 = new javax.swing.JRadioButton();
        cbMovimientos = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        tfNombre = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        tfCorre = new javax.swing.JTextField();
        tfDerecha = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        tfIzquierda = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        tfArriba = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        tfAbajo = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        tfRecargar = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        tfDisparar = new javax.swing.JTextField();
        jPanelJuegos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listJuegos = new javax.swing.JList();
        btGuardarJuego = new javax.swing.JButton();
        btBorrarJuego = new javax.swing.JButton();
        btCargarJuego = new javax.swing.JButton();
        btCambiarNombreJuego = new javax.swing.JButton();
        btRefrescarJuegos = new javax.swing.JButton();
        lblJuegoActual = new javax.swing.JLabel();
        jPanelCreditos = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btSalir = new javax.swing.JButton();
        btContinuar = new javax.swing.JButton();
        btComenzar = new javax.swing.JButton();
        lblInfoGuardar = new javax.swing.JLabel();

        setTitle("ChemaInvaders");
        setModal(true);
        setName("configuracion"); // NOI18N
        setUndecorated(true);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        imgHeader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/juego/gameHeader-1.png"))); // NOI18N

        tpConfiguracion.setPreferredSize(new java.awt.Dimension(820, 160));

        jPanelBienvenido.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelBienvenidoComponentShown(evt);
            }
        });
        jPanelBienvenido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanelBienvenidoFocusGained(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        jLabel8.setText("Número de jugadores:");

        jLabel9.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        jLabel9.setText("Número de invasores:");

        lblNumJugadores.setFont(new java.awt.Font("Bitstream Charter", 0, 24)); // NOI18N
        lblNumJugadores.setText("lblNumJugadores");

        lblNumInvasores.setFont(new java.awt.Font("Bitstream Charter", 0, 24)); // NOI18N
        lblNumInvasores.setText("lblNumInvasores");

        jLabel5.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        jLabel5.setText("Nivel");

        lblNivel.setFont(new java.awt.Font("Bitstream Charter", 0, 24)); // NOI18N
        lblNivel.setText("lblNivel");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Cantarell", 0, 16)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("V.1.0*****************************\n                        INVADERS\n Programador y diseñador: @Chema_class\n*********************************\nInspirado en el clásico Space Invaders.\nPara 1 o 2 jugadores. \n\n¡CONSIGUE PUNTOS ELIMINANDO INVASORES Y\nMEJORA TU NAVE EN LA TIENDA! (F1)\n\nEn la pestaña de 'Configuración' puedes modificar\nel número de jugadores (1 ó 2),el modo de juego, \nel número de invasores a los que querrás \nenfrentarte y poder activar y desactivar el sonido.\n\nPuedes configurar los controles de juego en la \npestaña de 'Controles'.\n\nNÚMERO DE INVASORES:\n-Puedes elegir el número de invasores a los que\nestás dispuesto a enfrentarte.");
        jScrollPane1.setViewportView(jTextArea1);

        jLabel6.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        jLabel6.setText("Dificultad");

        lblDificultad.setFont(new java.awt.Font("Bitstream Charter", 0, 24)); // NOI18N
        lblDificultad.setText("lblDificultad");

        javax.swing.GroupLayout jPanelBienvenidoLayout = new javax.swing.GroupLayout(jPanelBienvenido);
        jPanelBienvenido.setLayout(jPanelBienvenidoLayout);
        jPanelBienvenidoLayout.setHorizontalGroup(
            jPanelBienvenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBienvenidoLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanelBienvenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelBienvenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNumInvasores, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumJugadores)
                    .addComponent(lblNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDificultad, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelBienvenidoLayout.setVerticalGroup(
            jPanelBienvenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBienvenidoLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanelBienvenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblNumJugadores))
                .addGap(24, 24, 24)
                .addGroup(jPanelBienvenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lblNumInvasores))
                .addGap(24, 24, 24)
                .addGroup(jPanelBienvenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblNivel))
                .addGap(24, 24, 24)
                .addGroup(jPanelBienvenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblDificultad))
                .addContainerGap(35, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );

        tpConfiguracion.addTab("INVADERS", jPanelBienvenido);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/juego/prop_nave.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel7.setText("Nave -> Indicará el nombre de la nave. Puede cambiarse desde 'Controles'.");

        jLabel10.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel10.setText("Munición -> Indica la munición disponible. Cuando se esté agotando deberás recargar.");

        jLabel11.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel11.setText("Resistencia -> Representa la resistencia actual de la nave. Si es inferior o igual a 0 se");

        jLabel12.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel12.setText("recuperará el total de resistencia y se perderá una vida.");

        jLabel13.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel13.setText("En las esquinas inferiores aparecerán las propiedades de las naves:");

        jLabel14.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel14.setText("Puntos -> Se consiguen derrotando invasores. Podrás cambiar puntos en la tienda por mejoras para la nave.");

        jLabel15.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel15.setText("Vidas -> Cuando el número de vidas llegue a 0 la nave habrá perdido el juego sin posibilidad  de retorno.");

        jLabel38.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel38.setText("Teclas  básicas:");

        jLabel39.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel39.setText("Esc -> Pausa el juego y muestra el menú principal.");

        jLabel40.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel40.setText("F1-> Pausa el juego y muestra la tienda de mejoras para las naves.");

        jLabel41.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel41.setText("P -> Pausa el juego.");

        jLabel42.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel42.setText("F10 -> Cierra el juego.");

        jLabel43.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel43.setText("Elige los controles de tu nave:");

        jLabel44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/juego/movimientos_foto1.png"))); // NOI18N

        jLabel45.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel45.setText("Moverte, disparar, recargar y ¡correr indefinidamente!");

        jLabel46.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel46.setText("Podrás cambiarle el nombre y además elegir uno de los tipos de movimientos ya establecidos en el juego.");

        jLabel47.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel47.setText("Simplemente has de seleccionar el tipo de movimientos que quieres para tu nave y pulsar sobre guardar.");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel12))))
                    .addComponent(jLabel15)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel40)
                    .addComponent(jLabel41)
                    .addComponent(jLabel42)
                    .addComponent(jLabel44)
                    .addComponent(jLabel43)
                    .addComponent(jLabel45)
                    .addComponent(jLabel46)
                    .addComponent(jLabel47)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel44)
                .addGap(18, 18, 18)
                .addComponent(jLabel45)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel46)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel47)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        spBasicos.setViewportView(jPanel3);

        tpIntrucciones.addTab("Básicos", spBasicos);

        jLabel58.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel58.setText("¿Cómo guardar?");

        jLabel59.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel59.setText("Refrescar -> Muestra todos los juegos que fueron guardados previamente en la Base de Datos.");

        jLabel60.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/juego/guardar_foto1.png"))); // NOI18N

        jLabel61.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel61.setText("Guardar partida -> Guarda en la BB la partida y todas sus propiedades (naves, escudos e invasores)");

        jLabel62.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel62.setText("Borrar partida -> Elimina la partida de la Base de Datos.");

        jLabel63.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel63.setText("¡Gargar y jugar! -> Selecciona una partida y pulsa este botón para cargarla y poder avanzar en ella.");

        jLabel64.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel64.setText("y seguidamente pulsar sobre el botón de \"Guardar partida\".");

        jLabel65.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel65.setText("Botones:");

        jLabel66.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel66.setText("Guardar es muy sencillo, tan simple como comenzar una partida/juego, pulsar ESC para pausarlo y ver el menú");

        jLabel67.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel67.setText("Cambiar nombre -> Cambia el nombre de la partida");

        jLabel68.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel68.setText("Siempre que se le de al botón de guardar se guardará sobre el juego actual. Es decir, si la partida no existía");

        jLabel69.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel69.setText("se creará una partida nueva. Si la partida fue cargada, se sobrescribirá la partida con las nuevas propiedades.");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel58, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel66)
                                .addComponent(jLabel65, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel59, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel62, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel61, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel63, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addComponent(jLabel67, javax.swing.GroupLayout.Alignment.LEADING))))
                            .addComponent(jLabel68)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel69)
                                    .addComponent(jLabel64))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel58)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel66)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel64)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel65)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel59)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel61)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel63)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel62)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel67)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel68)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel69)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        spGuardarInstrucciones.setViewportView(jPanel4);

        tpIntrucciones.addTab("¿Guardar?", spGuardarInstrucciones);

        jLabel57.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel57.setText("tengan una resistencia inferior a 10.");

        jLabel37.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel37.setText("resistencia con precisión de forma numérica cuando ");

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/juego/invasor_foto2.png"))); // NOI18N

        jLabel35.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel35.setText("¡dispararán más rápido! Además, podrás ver su ");

        jLabel34.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel34.setText("menos invasores. Es decir, cuantos menos hayan, ");

        jLabel25.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel25.setText("Eso sí, el número de disparos por invasor se incrementá conforme haya");

        jLabel24.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel24.setText("¡Cuidado con los invasores!");

        jLabel23.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel23.setText("Los invasores dispararán indiscriminadamente y de forma aleatoria. ");

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/juego/invasor_foto1.png"))); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel25)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel34)
                                    .addComponent(jLabel35)
                                    .addComponent(jLabel37)
                                    .addComponent(jLabel57))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel36))))
                    .addComponent(jLabel24))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel37)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel57))
                            .addComponent(jLabel36))))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        spInvasores.setViewportView(jPanel8);

        tpIntrucciones.addTab("Invasores", spInvasores);

        jLabel20.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel20.setText("Además, podrás incrementar en 1 cualquiera de estas propiedades de la nave seleccionada ");

        jLabel19.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel19.setText("Puntos disponibles || Fuerza || Resistencia total || Vidas || Munición");

        jLabel18.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel18.setText("Selecciona una nave y podrás ver:");

        jLabel56.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel56.setText("de la siguiente compra de la misma propiedad. ");

        jLabel17.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel17.setText("Cambia tus puntos por mejoras: (F1)");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/juego/tienda_mejoras.png"))); // NOI18N

        jLabel21.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel21.setText("siempre y cuando tengas puntos suficientes. ¡Ojo! Cada compra incrementará el precio ");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel56)))
                            .addComponent(jLabel18))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel17))
                            .addComponent(jLabel16))
                        .addGap(0, 155, Short.MAX_VALUE))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel56)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addGap(19, 19, 19))
        );

        spTienda.setViewportView(jPanel9);

        tpIntrucciones.addTab("Tienda mejoras", spTienda);

        jLabel55.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel55.setText("caídos sería algo así: Fácil: 1/2, Medio: 1/3, Pro: 1/4.");

        jLabel51.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel51.setText("El tipo de dificultad influirá en el número de vidas que tendrá cada invasor: Fácil: 1, Medio: 2, Pro: 3.");

        jLabel52.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel52.setText("Además, las probabilidades de que obtengas más puntos por cada enemigo derrotado y también recuperar");

        jLabel53.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel53.setText("resistencia serán mucho menores: Fácil: 1/3, Medio: 1/6, Pro: 1/9. Y para la recuperación de escudos ");

        jLabel54.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel54.setText("También puedes elegir el nivel por el que quieres empezar el juego y el número de invasores.");

        jLabel50.setFont(new java.awt.Font("Abyssinica SIL", 0, 16)); // NOI18N
        jLabel50.setText("Puedes elegir para uno o dos jugadores.");

        jLabel48.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/juego/configuracion_foto1.png"))); // NOI18N

        jLabel49.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel49.setText("Configuración del juego:");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48)
                    .addComponent(jLabel49)
                    .addComponent(jLabel50)
                    .addComponent(jLabel51)
                    .addComponent(jLabel52)
                    .addComponent(jLabel53)
                    .addComponent(jLabel54)
                    .addComponent(jLabel55))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel49)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel50)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel51)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel52)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel53)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel55)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel54)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel48)
                .addGap(17, 17, 17))
        );

        spConfiguracionJuego.setViewportView(jPanel10);

        tpIntrucciones.addTab("Configuración del juego", spConfiguracionJuego);

        javax.swing.GroupLayout panelInstruccionesLayout = new javax.swing.GroupLayout(panelInstrucciones);
        panelInstrucciones.setLayout(panelInstruccionesLayout);
        panelInstruccionesLayout.setHorizontalGroup(
            panelInstruccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpIntrucciones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 874, Short.MAX_VALUE)
        );
        panelInstruccionesLayout.setVerticalGroup(
            panelInstruccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInstruccionesLayout.createSequentialGroup()
                .addComponent(tpIntrucciones, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addContainerGap())
        );

        tpConfiguracion.addTab("Instrucciones", panelInstrucciones);

        jLabel3.setFont(new java.awt.Font("Bitstream Charter", 0, 24)); // NOI18N
        jLabel3.setText("Dificultad:");

        bgDificultad.add(rbFacil);
        rbFacil.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        rbFacil.setText("Fácil");
        rbFacil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFacilActionPerformed(evt);
            }
        });

        bgDificultad.add(rbMedio);
        rbMedio.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        rbMedio.setText("Medio");
        rbMedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMedioActionPerformed(evt);
            }
        });

        bgDificultad.add(rbPro);
        rbPro.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        rbPro.setText("Profesional");
        rbPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbProActionPerformed(evt);
            }
        });

        jLabelDificultad.setFont(new java.awt.Font("Bitstream Charter", 0, 24)); // NOI18N
        jLabelDificultad.setText("Nivel:");

        sNivel.setFont(new java.awt.Font("Bitstream Charter", 0, 16)); // NOI18N
        sNivel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sNivelStateChanged(evt);
            }
        });

        lblNumeroDeJugadores1.setFont(new java.awt.Font("Bitstream Charter", 0, 24)); // NOI18N
        lblNumeroDeJugadores1.setText("Número de Naves:");

        bgNumJug.add(rb1Jugador);
        rb1Jugador.setFont(new java.awt.Font("Abyssinica SIL", 0, 18)); // NOI18N
        rb1Jugador.setSelected(true);
        rb1Jugador.setText("1 Jugador");
        rb1Jugador.setToolTipText("1 Jugador");
        rb1Jugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb1JugadorActionPerformed(evt);
            }
        });

        bgNumJug.add(rb2Jugadores);
        rb2Jugadores.setFont(new java.awt.Font("Abyssinica SIL", 0, 18)); // NOI18N
        rb2Jugadores.setText("2 Jugadores");
        rb2Jugadores.setToolTipText("2 Jugadores");
        rb2Jugadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb2JugadoresActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Bitstream Charter", 0, 24)); // NOI18N
        jLabel2.setText("Número de invasores:");

        cbPorDefecto.setFont(new java.awt.Font("Abyssinica SIL", 0, 18)); // NOI18N
        cbPorDefecto.setText("Por defecto");
        cbPorDefecto.setToolTipText("3 Filas + 10 Columnas");
        cbPorDefecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPorDefectoActionPerformed(evt);
            }
        });

        sFilas.setFont(new java.awt.Font("Bitstream Charter", 0, 16)); // NOI18N
        sFilas.setToolTipText("Filas de invasores");
        sFilas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sFilasStateChanged(evt);
            }
        });

        lblFilas.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        lblFilas.setText("Filas:");

        lblColum.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        lblColum.setText("Columnas:");

        sColum.setFont(new java.awt.Font("Bitstream Charter", 0, 16)); // NOI18N
        sColum.setToolTipText("Columnas de invasores");
        sColum.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sColumStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanelConfiguracionLayout = new javax.swing.GroupLayout(jPanelConfiguracion);
        jPanelConfiguracion.setLayout(jPanelConfiguracionLayout);
        jPanelConfiguracionLayout.setHorizontalGroup(
            jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfiguracionLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNumeroDeJugadores1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(rb1Jugador, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rb2Jugadores, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelConfiguracionLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelConfiguracionLayout.createSequentialGroup()
                                .addComponent(rbFacil)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rbMedio)
                                .addGap(18, 18, 18)
                                .addComponent(rbPro))
                            .addGroup(jPanelConfiguracionLayout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelDificultad)
                                    .addComponent(sNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(51, 51, 51)
                .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConfiguracionLayout.createSequentialGroup()
                        .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblColum)
                            .addComponent(lblFilas))
                        .addGap(36, 36, 36)
                        .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sColum, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelConfiguracionLayout.createSequentialGroup()
                                .addComponent(sFilas, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbPorDefecto))))
                    .addComponent(jLabel2))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanelConfiguracionLayout.setVerticalGroup(
            jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfiguracionLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNumeroDeJugadores1)
                        .addComponent(jLabelDificultad))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConfiguracionLayout.createSequentialGroup()
                        .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelConfiguracionLayout.createSequentialGroup()
                                .addComponent(rb1Jugador)
                                .addGap(8, 8, 8)
                                .addComponent(rb2Jugadores))
                            .addGroup(jPanelConfiguracionLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(sNivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)
                        .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbFacil)
                            .addComponent(rbMedio)
                            .addComponent(rbPro)
                            .addComponent(jLabel3)))
                    .addGroup(jPanelConfiguracionLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sFilas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFilas)
                            .addComponent(cbPorDefecto))
                        .addGap(23, 23, 23)
                        .addGroup(jPanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sColum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblColum))))
                .addContainerGap())
        );

        tpConfiguracion.addTab("Configuración", jPanelConfiguracion);

        jPanelControles.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelControlesComponentShown(evt);
            }
        });

        btGuardarControles.setFont(new java.awt.Font("Bitstream Charter", 1, 18)); // NOI18N
        btGuardarControles.setText("Guardar");
        btGuardarControles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarControlesActionPerformed(evt);
            }
        });

        bgControles.add(rbNave2);
        rbNave2.setFont(new java.awt.Font("Bitstream Charter", 0, 24)); // NOI18N
        rbNave2.setText("Nave: (2)");
        rbNave2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNave2ActionPerformed(evt);
            }
        });

        bgControles.add(rbNave1);
        rbNave1.setFont(new java.awt.Font("Bitstream Charter", 0, 24)); // NOI18N
        rbNave1.setSelected(true);
        rbNave1.setText("Nave: (1)");
        rbNave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNave1ActionPerformed(evt);
            }
        });

        cbMovimientos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "movimiento tipo 1", "movimiento tipo 2", "movimiento tipo 3" }));
        cbMovimientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMovimientosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbNave1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbNave2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbMovimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btGuardarControles, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbNave1)
                    .addComponent(rbNave2)
                    .addComponent(cbMovimientos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btGuardarControles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel32.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        jLabel32.setText("Nombre:");

        tfNombre.setFont(new java.awt.Font("Bitstream Charter", 0, 16)); // NOI18N
        tfNombre.setText("*jugador1");
        tfNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfNombreKeyPressed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        jLabel33.setText("Correr:");

        tfCorre.setEditable(false);
        tfCorre.setFont(new java.awt.Font("Bitstream Charter", 0, 16)); // NOI18N
        tfCorre.setText("*");

        tfDerecha.setEditable(false);
        tfDerecha.setColumns(1);
        tfDerecha.setFont(new java.awt.Font("Bitstream Charter", 0, 16)); // NOI18N
        tfDerecha.setText("*");

        jLabel26.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        jLabel26.setText("Derecha:");

        jLabel28.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        jLabel28.setText("Izquierda:");

        tfIzquierda.setEditable(false);
        tfIzquierda.setFont(new java.awt.Font("Bitstream Charter", 0, 16)); // NOI18N
        tfIzquierda.setText("*");

        jLabel27.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        jLabel27.setText("Arriba:");

        tfArriba.setEditable(false);
        tfArriba.setFont(new java.awt.Font("Bitstream Charter", 0, 16)); // NOI18N
        tfArriba.setText("*");

        jLabel29.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        jLabel29.setText("Abajo:");

        tfAbajo.setEditable(false);
        tfAbajo.setFont(new java.awt.Font("Bitstream Charter", 0, 16)); // NOI18N
        tfAbajo.setText("*");

        jLabel31.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        jLabel31.setText("Recargar:");

        tfRecargar.setEditable(false);
        tfRecargar.setFont(new java.awt.Font("Bitstream Charter", 0, 16)); // NOI18N
        tfRecargar.setText("*");

        jLabel30.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        jLabel30.setText("Disparar:");

        tfDisparar.setEditable(false);
        tfDisparar.setFont(new java.awt.Font("Bitstream Charter", 0, 16)); // NOI18N
        tfDisparar.setText("*");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfCorre)
                    .addComponent(tfNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfIzquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel31))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfArriba, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfDisparar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfRecargar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel28)
                    .addComponent(tfIzquierda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(tfArriba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDisparar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(tfCorre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel29)
                    .addComponent(tfAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(tfRecargar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelControlesLayout = new javax.swing.GroupLayout(jPanelControles);
        jPanelControles.setLayout(jPanelControlesLayout);
        jPanelControlesLayout.setHorizontalGroup(
            jPanelControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlesLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanelControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13))
        );
        jPanelControlesLayout.setVerticalGroup(
            jPanelControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlesLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );

        tpConfiguracion.addTab("Controles", jPanelControles);

        listJuegos.setFont(new java.awt.Font("Bitstream Charter", 0, 16)); // NOI18N
        listJuegos.setModel(new DefaultListModel());
        jScrollPane2.setViewportView(listJuegos);

        btGuardarJuego.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        btGuardarJuego.setText("Guardar partida");
        btGuardarJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarJuegoActionPerformed(evt);
            }
        });

        btBorrarJuego.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        btBorrarJuego.setText("Borrar partida");
        btBorrarJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBorrarJuegoActionPerformed(evt);
            }
        });

        btCargarJuego.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        btCargarJuego.setText("¡Cargar y jugar!");
        btCargarJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCargarJuegoActionPerformed(evt);
            }
        });

        btCambiarNombreJuego.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        btCambiarNombreJuego.setText("Cambiar nombre");
        btCambiarNombreJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCambiarNombreJuegoActionPerformed(evt);
            }
        });

        btRefrescarJuegos.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        btRefrescarJuegos.setText("Refrescar");
        btRefrescarJuegos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRefrescarJuegosActionPerformed(evt);
            }
        });

        lblJuegoActual.setText("Juego actual: ");

        javax.swing.GroupLayout jPanelJuegosLayout = new javax.swing.GroupLayout(jPanelJuegos);
        jPanelJuegos.setLayout(jPanelJuegosLayout);
        jPanelJuegosLayout.setHorizontalGroup(
            jPanelJuegosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelJuegosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelJuegosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btCambiarNombreJuego, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addComponent(btRefrescarJuegos, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addComponent(btGuardarJuego, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addComponent(btCargarJuego, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addComponent(btBorrarJuego, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelJuegosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
                    .addGroup(jPanelJuegosLayout.createSequentialGroup()
                        .addComponent(lblJuegoActual)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(15, 15, 15))
        );
        jPanelJuegosLayout.setVerticalGroup(
            jPanelJuegosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelJuegosLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanelJuegosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btRefrescarJuegos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblJuegoActual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelJuegosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJuegosLayout.createSequentialGroup()
                        .addComponent(btGuardarJuego, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCargarJuego, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btBorrarJuego, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCambiarNombreJuego, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        tpConfiguracion.addTab("GUARDAR", jPanelJuegos);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Bitstream Charter", 0, 16)); // NOI18N
        jTextArea2.setRows(5);
        jTextArea2.setText("Programador y diseñador: José María Valera Reales.\n\nInspirado en el clásico Space Invaders.\n\nSobre la aplicación:\nHa sido desarrollada en Java, utilizando una base de datos embebida SQLite.\n\nImágenes extraídas desde el buscador Google con licencia CopyLeft y modificadas para que queden \najustadas a los requisitos de esta aplicación.\n\nFecha de inicio de la creación de esta aplicación: 7 de Julio de 2013. \nLanzamiento de la primera versión: 10 Agosto de 2013.\n\nEsta obra está licenciada bajo la Licencia Creative Commons Atribución-NoComercial 3.0 Unported. \nPara ver una copia de esta licencia, visita http://creativecommons.org/licenses/by-nc/3.0/.");
        jScrollPane5.setViewportView(jTextArea2);

        jLabel1.setText("Contacto{ Twitter: @Chema_class, E-mail: chema_class@outlook.com }");

        javax.swing.GroupLayout jPanelCreditosLayout = new javax.swing.GroupLayout(jPanelCreditos);
        jPanelCreditos.setLayout(jPanelCreditosLayout);
        jPanelCreditosLayout.setHorizontalGroup(
            jPanelCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreditosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
                    .addGroup(jPanelCreditosLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelCreditosLayout.setVerticalGroup(
            jPanelCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCreditosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        tpConfiguracion.addTab("Créditos", jPanelCreditos);

        btSalir.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        btSalir.setText("Salir del Juego");
        btSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalirActionPerformed(evt);
            }
        });

        btContinuar.setFont(new java.awt.Font("Bitstream Charter", 3, 22)); // NOI18N
        btContinuar.setText("Continuar");
        btContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btContinuarActionPerformed(evt);
            }
        });

        btComenzar.setFont(new java.awt.Font("Bitstream Charter", 0, 18)); // NOI18N
        btComenzar.setText("Comenzar un nuevo Juego");
        btComenzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btComenzarActionPerformed(evt);
            }
        });

        lblInfoGuardar.setText("...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(imgHeader)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btComenzar, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btContinuar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblInfoGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 862, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tpConfiguracion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(imgHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tpConfiguracion, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblInfoGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btContinuar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btComenzar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btComenzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btComenzarActionPerformed
        //Preparamos el juego
        final Juego juego = new Juego("Nuevo Juego");
        
        juego.setDificultadId(newDificultad);
        juego.setNivel(newNivel);
        juego.setnColum(newNColum);
        juego.setnFilas(newNFilas);
        juego.setnNaves(newNNaves);
        //cargamos la partida con el juego
        lblInfoGuardar.setText("> Creando una nueva partida, espera unos instantes ...");
        new Thread(new Runnable(){

            @Override
            public void run() {
                partida = new Partida(juego);
                lblInfoGuardar.setText("> ¡Partida creada con éxito!");
                comenzarPartida(partida); 
            }
            
        }).start();
        
    }//GEN-LAST:event_btComenzarActionPerformed

    private void btContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btContinuarActionPerformed
                
        this.setVisible(false);
    }//GEN-LAST:event_btContinuarActionPerformed

    private void btSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btSalirActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        
        init();
        //actualizar los datos para las ventanas
        actualizar();
        //refrescar la información de la principal
        actualizarPrincipal();
        //Comprobaremos el estado en el que se encuentra el juego 
        //(para el botón "Continuar")
        checkEstado();        
    }//GEN-LAST:event_formComponentShown
        
    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        
        /**
         * Hacer algo guapo por aquí 
         */
        
    }//GEN-LAST:event_formMouseEntered

    private void jPanelBienvenidoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanelBienvenidoFocusGained
        actualizarPrincipal();
    }//GEN-LAST:event_jPanelBienvenidoFocusGained

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        
    }//GEN-LAST:event_formComponentHidden
    
    private void btGuardarControlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarControlesActionPerformed
        if(rbNave1.isSelected())guardarNave(1);
        else guardarNave(2);
        
    }//GEN-LAST:event_btGuardarControlesActionPerformed
        
    private void rb1JugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb1JugadorActionPerformed
       actNumNaves(1);
    }//GEN-LAST:event_rb1JugadorActionPerformed

    private void rb2JugadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb2JugadoresActionPerformed
       actNumNaves(2);
       
    }//GEN-LAST:event_rb2JugadoresActionPerformed

    private void sNivelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sNivelStateChanged
        int var = actSpiner(sNivel);
        actNivel(var);
    }//GEN-LAST:event_sNivelStateChanged

    private void sFilasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sFilasStateChanged
        int var = actSpiner(sFilas), max = 8;       
        //si es mayor que max, devolveremos max
        if(var >= max){ var = max; sFilas.setValue(max); } 
        actFilas(var);
    }//GEN-LAST:event_sFilasStateChanged

    private void sColumStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sColumStateChanged
        int var = actSpiner(sColum), max = 20;
        //si es mayor que max, devolveremos max
        if(var >= max){ var = max; sColum.setValue(max); }
        actColum(var);
    }//GEN-LAST:event_sColumStateChanged

    private void rbNave2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNave2ActionPerformed
        cargarNave(2);
    }//GEN-LAST:event_rbNave2ActionPerformed

    private void rbNave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNave1ActionPerformed
        cargarNave(1);
    }//GEN-LAST:event_rbNave1ActionPerformed

    private void jPanelControlesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelControlesComponentShown
        if(rb1Jugador.isSelected()) newNNaves = 1; 
        else newNNaves = 2;
        if(rbNave1.isSelected()) cargarNave(1);
        else cargarNave(2);
    }//GEN-LAST:event_jPanelControlesComponentShown

    private void cbPorDefectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPorDefectoActionPerformed
        cbPorDefectoActualizar();
    }//GEN-LAST:event_cbPorDefectoActionPerformed
    
    private void tfNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNombreKeyPressed
        if(tfNombre.getText().length()>6){
            tfNombre.setText(tfNombre.getText().substring(0, 5));
        }
    }//GEN-LAST:event_tfNombreKeyPressed

    private void rbFacilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFacilActionPerformed
        actDificultad(controller.Juego.Dificultad.FACIL);
    }//GEN-LAST:event_rbFacilActionPerformed

    private void rbMedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMedioActionPerformed
        actDificultad(controller.Juego.Dificultad.MEDIO);
    }//GEN-LAST:event_rbMedioActionPerformed

    private void rbProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbProActionPerformed
        actDificultad(controller.Juego.Dificultad.PRO);
    }//GEN-LAST:event_rbProActionPerformed

    private void btGuardarJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarJuegoActionPerformed
        guardarJuego();
    }//GEN-LAST:event_btGuardarJuegoActionPerformed

    private void btBorrarJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBorrarJuegoActionPerformed
        borrarJuego();
    }//GEN-LAST:event_btBorrarJuegoActionPerformed

    private void btCargarJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCargarJuegoActionPerformed
        cargarJuego();
    }//GEN-LAST:event_btCargarJuegoActionPerformed

    private void jPanelBienvenidoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelBienvenidoComponentShown
        actualizarPrincipal();
    }//GEN-LAST:event_jPanelBienvenidoComponentShown

    private void btCambiarNombreJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCambiarNombreJuegoActionPerformed
        cambiarNombre();
    }//GEN-LAST:event_btCambiarNombreJuegoActionPerformed

    private void btRefrescarJuegosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRefrescarJuegosActionPerformed
        refrescarPartidas();
    }//GEN-LAST:event_btRefrescarJuegosActionPerformed

    private void cbMovimientosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMovimientosActionPerformed
        
        Movimientos m = ((Movimientos)cbMovimientos.getSelectedItem());
        cargarMovimientos(m);
        
    }//GEN-LAST:event_cbMovimientosActionPerformed
    
    /**
     * Cambiar el nombre a un juego
     */    
    private void cambiarNombre(){
        final Juego juego = ((Juego) listJuegos.getSelectedValue());
        
        if( juego == null  )return;
        
        final String nombre = JOptionPane.showInputDialog( this,
                "El nombre del juego debe estar\ncomprendido entre 3 y 15 caracteres "
                ,"¿Con qué nombre quieres guardar el juego?",
                JOptionPane.QUESTION_MESSAGE );

        if(nombre == null|| nombre.length() < 3 || nombre.length() > 15) return;

        juego.setNombre(nombre);

        lblInfoGuardar.setText("> Actualizando, espera unos instantes ...");
        new Thread(new Runnable(){
            @Override
            public void run() {
                dao.update(juego);
                refrescarPartidas();
                lblInfoGuardar.setText("> Nombre cambiado con éxito.");
            }

        }).start();
    }    
    
    /**
     * Borrar la partida seleccionada
     */
    private void borrarJuego(){
        final Juego juego = ((Juego)listJuegos.getSelectedValue()); 
        if(juego!=null){
            int seguro = JOptionPane.showConfirmDialog(this
                    ,"¿Estás seguro de querer eliminar"
                    + "\nla partida '"+juego.getNombre().toUpperCase()+"'?"
                    ,"Eliminar partida"
                    ,JOptionPane.WARNING_MESSAGE
                    ,0);
            if(seguro == JOptionPane.OK_OPTION){
                lblInfoGuardar.setText("> Borrando partida, por favor espera unos instantes ...");
                new Thread(new Runnable(){
                    @Override
                    public void run() {
                        // y la borramos
                        dao.delete(juego);
                        refrescarPartidas();
                        lblInfoGuardar.setText("> Partida borrada con éxito.");
                    }
                }).start();
            }
        }else{
            JOptionPane.showMessageDialog(this, "Selecciona una partida a borrar", 
                    "Error al borrar", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    /**
     * Guardar una nueva partida o sobreescribir una ya existente 
     */
    private void guardarJuego(){
        //Juego actual
        Juego juego = partida.getJuego();
        //Lista de todos los juegos
        ListModel model = listJuegos.getModel();
        //si existe juego quiere decir que fue guardado previamente y/o cargado
        boolean existeJuego = false;
        //comprobamos que el juego actual exista  
        for(int i=0; i<model.getSize();i++){
            if(juego.equals((Juego)model.getElementAt(i))){
                existeJuego = true; break;
            }
        }
        //si no existe el juego lo guardaremos
        if(!existeJuego){
            guardarNuevo();
        }
        //si existe el juego lo que haremos será actualizarlo
        else{
            updatePartida();
        }
    }
    
    /**
     * Actualizará la actual partida en la base de datos 
     * (que tendría que estar previamente ya guardada. 
     * Haremos un update a la partida
     */
    private void updatePartida(){
        int seguro = JOptionPane.showConfirmDialog( this,
                    "¿Estás seguro de que deseas sobrescribir\n"
                + "la partida actual '"+partida.getJuego().getNombre().toUpperCase()+"'?"
                    ,"Actualizar partida",
                    JOptionPane.INFORMATION_MESSAGE);
        //si no está seguro entonces no haremos nada
        if(seguro != JOptionPane.OK_OPTION) return;
        //si se está seguro, pasaremos a actualizar la partida
        lblInfoGuardar.setText("> Guardando, espera unos instantes ...");
        new Thread(new Runnable(){
            @Override
            public void run() {
                dao.update(partida);
                refrescarPartidas();
                lblInfoGuardar.setText("> Partida actualizada con éxito.");
            }
        }).start();        
    }
    
    /**
     * Guardar nuevo juego en la DB
     */
    private void guardarNuevo(){
        if(partida.getInvasores() != null){
            
            final String nombre = JOptionPane.showInputDialog( this,
                    "El nombre del juego debe estar\ncomprendido entre 3 y 15 caracteres "
                    ,"¿Con qué nombre quieres guardar el juego?",
                    JOptionPane.QUESTION_MESSAGE );
            
            if(nombre == null|| nombre.length() < 3 || nombre.length() > 15) return;
            
            partida.getJuego().setNombre(nombre);
            
            lblInfoGuardar.setText("> Guardando, espera unos instantes ...");
            new Thread(new Runnable(){
                @Override
                public void run() {
                    dao.insert(partida);
                    refrescarPartidas();
                    lblInfoGuardar.setText("> Partida guardada con éxito.");
                }
            
            }).start();
        } else {
            lblInfoGuardar.setText("> ¡No puedes guardar una partida que no existe!");
        }
    }
    
    /**
     * Comenzar nuevo juego
     * @param juego 
     */
    private void comenzarPartida(final Partida partida){
        partida.setEstado(Partida.Estado.CARGANDO);
        this.setVisible(false); 
        
        Thread t = new Thread(new Runnable(){
            @Override
            public void run() {
                decorador.setPartida(partida);
            }            
        });
        t.start();
    }
    
    /**
     * Cargar una partida guardada
     */
    private void cargarJuego(){        
        final Juego juego = ((Juego)listJuegos.getSelectedValue());        
        if(juego == null){
            lblInfoGuardar.setText("> Selecciona una partida para poder cargarla."); 
            return;
        }
        
        lblInfoGuardar.setText("> Cargando juego, espera unos instantes ..."); 
        new Thread(new Runnable(){
                @Override
                public void run() {
                    partida = dao.selectPartida(juego);
                    lblInfoGuardar.setText("> Juego cargado con éxito."); 
                    comenzarPartida(partida);                    
                }
        }).start();
    } 
    
    /**
     * Actualizar la lista de partidas guardadas en la DB
     */
    private void refrescarPartidas(){
       lblInfoGuardar.setText("> Cargando todas las partidas, espera unos instantes ..."); 
        new Thread(new Runnable(){
            @Override
            public void run() {
                DefaultListModel<Juego> model = dao.selectAllJuegos();

                listJuegos.setModel(model);
                if(!model.isEmpty()){
                     lblInfoGuardar.setText("> Partidas cargadas con éxito"); 
                }else{
                    lblInfoGuardar.setText("> No se encontraron partidas para poder ser cargadas."); 
                }
            }
       }).start();
    }
    
    /**
     * Inicializar todos los miembros
     */
    private void init(){        
        decorador = ((Main)getParent()).getDecorador();
        partida = decorador.getPartida();
        juego = partida.getJuego();
        newNColum = juego.getnColum();
        newNFilas = juego.getnFilas(); 
        newDificultad = juego.getDificultad().VALUE;
        newNivel= juego.getNivel(); 
        int n;
        newNNaves = ((n = juego.getnNaves())<=0)?1:n;
        
        naves = partida.getNaves();
        
        lblJuegoActual.setText("Juego actual: "+partida.getJuego().getNombre().toUpperCase());
    }    
   
    /**
     * Actualizar todos los componentes
     */
    private void actualizar(){
        
        refrescarPartidas();
        
        actFilasYColum();
        actDificultad();
        actNivel();
        actDificultad();
        actNumNaves();
        
        //cargar nombres naves
        actNombresNaves();
               
    }
        
    /**
     * Actualizar las filas y las columnas de invasores del juego
     */
    private void actFilasYColum(){
        if(cbPorDefecto.isSelected()){
            cbPorDefectoActualizar();
        }else{
            sFilas.setValue(newNFilas); 
            sColum.setValue(newNColum);
        }
    }
    private void actFilas(int f){
        newNFilas = f;
        actFilasYColum();
        actualizarPrincipal();
    }
    private void actColum(int c){
        newNColum = c;
        actFilasYColum();
        actualizarPrincipal();
    }
    
    private void actNombresNaves(){
//        List<Nave> naves = juego.getNaves().getMisNaves();
        rbNave1.setText(naves.get(0).getNombre());
        try{
            rbNave2.setText(naves.get(1).getNombre());        
        }catch(java.lang.IndexOutOfBoundsException e){
            //e.printStackTrace();
        }
    }
    
    /**
     * Actualizar el número de naves
     */
    private void actNumNaves(){
        if (newNNaves == 2) rb2Jugadores.setSelected(true);
        else rb1Jugador.setSelected(true);        
    }
    private void actNumNaves(int n){
        newNNaves = n;
        actualizarPrincipal();
    }
   
    /**
     * Establecer el nivel del nuevo juego
     * @param nivel 
     */
    private void actNivel(){
        sNivel.setValue(newNivel);
    }
    private void actNivel(int nivel){
        int var = nivel, max = 1000;
        //si es mayor que max, devolveremos max
        if(var>=max){ var = max; sNivel.setValue(max); }
        newNivel = var;
        actualizarPrincipal();
    }        
    /**
     * Actualizar la dificulta
     */
    private void actDificultad(){
        Dificultad d = Dificultad.getDificultadById(newDificultad);
        if(d.equals(Dificultad.FACIL)){
            rbFacil.setSelected(true);
        }else if(d.equals(Dificultad.MEDIO)){
            rbMedio.setSelected(true);
        }else if(d.equals(Dificultad.PRO)){
            rbPro.setSelected(true);           
        }
    }
    private void actDificultad(Dificultad d){
        newDificultad = d.VALUE;
        actualizarPrincipal();
    }
    
    /**
     * Conocer el estado del juego para saber si mostrar 
     * o no el botón de 'Continuar'
     */
    private void checkEstado(){
        if(partida.getEstado().equals(Estado.PAUSADO))     
            btContinuar.setVisible(true);
        else btContinuar.setVisible(false);
    }
    
    /**
     * Actualizar el tab principal
     */
    private void actualizarPrincipal(){        
        //Número jugadores
        lblNumJugadores.setText(String.valueOf(newNNaves)); 
        
        //Número invasores
        int numIn = newNFilas*newNColum;        
        lblNumInvasores.setText(numIn+" Invasores");
        
        //Nivel
        lblNivel.setText(String.valueOf(newNivel));
        
        //Dificultad
        lblDificultad.setText((newDificultad != 0)
                ? (Dificultad.getDificultadById(newDificultad)).name().toString()
                : "*");
    }
            
    private void cbPorDefectoActualizar(){        
        if(cbPorDefecto.isSelected()){            
            sFilas.setEnabled(false);
            sColum.setEnabled(false); 
            sFilas.setValue(3); //juego.getFilas()
            sColum.setValue(10);
            
        }else{
            sFilas.setEnabled(true);
            sColum.setEnabled(true);
        }
    }
    
    /**
     * Nos aseguraremos que el Spinner no tenga valores inferiores a 1
     * @param sp
     * @return int
     */
    private int actSpiner(JSpinner sp){
        int var = Integer.parseInt(sp.getValue().toString());         
        if(var<=0){
            sp.setValue(1);
            return 1;
        }else return var;         
    } 
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code variables">  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgControles;
    private javax.swing.ButtonGroup bgDificultad;
    private javax.swing.ButtonGroup bgModoJuego;
    private javax.swing.ButtonGroup bgNumJug;
    private javax.swing.JButton btBorrarJuego;
    private javax.swing.JButton btCambiarNombreJuego;
    private javax.swing.JButton btCargarJuego;
    private javax.swing.JButton btComenzar;
    private javax.swing.JButton btContinuar;
    private javax.swing.JButton btGuardarControles;
    private javax.swing.JButton btGuardarJuego;
    private javax.swing.JButton btRefrescarJuegos;
    private javax.swing.JButton btSalir;
    private javax.swing.JComboBox cbMovimientos;
    private javax.swing.JCheckBox cbPorDefecto;
    private javax.swing.JLabel imgHeader;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDificultad;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelBienvenido;
    private javax.swing.JPanel jPanelConfiguracion;
    private javax.swing.JPanel jPanelControles;
    private javax.swing.JPanel jPanelCreditos;
    private javax.swing.JPanel jPanelJuegos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel lblColum;
    private javax.swing.JLabel lblDificultad;
    private javax.swing.JLabel lblFilas;
    private javax.swing.JLabel lblInfoGuardar;
    private javax.swing.JLabel lblJuegoActual;
    private javax.swing.JLabel lblNivel;
    private javax.swing.JLabel lblNumInvasores;
    private javax.swing.JLabel lblNumJugadores;
    private javax.swing.JLabel lblNumeroDeJugadores1;
    private javax.swing.JList listJuegos;
    private javax.swing.JPanel panelInstrucciones;
    private javax.swing.JRadioButton rb1Jugador;
    private javax.swing.JRadioButton rb2Jugadores;
    private javax.swing.JRadioButton rbFacil;
    private javax.swing.JRadioButton rbMedio;
    private javax.swing.JRadioButton rbNave1;
    private javax.swing.JRadioButton rbNave2;
    private javax.swing.JRadioButton rbPro;
    private javax.swing.JSpinner sColum;
    private javax.swing.JSpinner sFilas;
    private javax.swing.JSpinner sNivel;
    private javax.swing.JScrollPane spBasicos;
    private javax.swing.JScrollPane spConfiguracionJuego;
    private javax.swing.JScrollPane spGuardarInstrucciones;
    private javax.swing.JScrollPane spInvasores;
    private javax.swing.JScrollPane spTienda;
    private javax.swing.JTextField tfAbajo;
    private javax.swing.JTextField tfArriba;
    private javax.swing.JTextField tfCorre;
    private javax.swing.JTextField tfDerecha;
    private javax.swing.JTextField tfDisparar;
    private javax.swing.JTextField tfIzquierda;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfRecargar;
    private javax.swing.JTabbedPane tpConfiguracion;
    private javax.swing.JTabbedPane tpIntrucciones;
    // End of variables declaration//GEN-END:variables
    // </editor-fold>  

    /**
     * Cargar el nombre y los movimientos de la nave pasada por parámetro para
     * que queden visibles en las cajas correspondientes
     * @param i número de la nave. 1 ó 2
     */
    private void cargarNave(int i){
        Nave n = naves.get(i - 1);
        tfNombre.setText(n.getNombre());
        cargarMovimientos(n.getMov());
        actualizarComboMovimientos(n.getMov());
    }
    
    /**
     * cargar todos los movimientos para que queden visibles en sus correspondientes
     * cajas de texto
     * @param m Movimiento
     */
    private void cargarMovimientos(Movimientos m) {
        tfAbajo.setText(m.getAba().getNombreTecla());
        tfArriba.setText(m.getArr().getNombreTecla());
        tfCorre.setText(m.getCorre().getNombreTecla());
        tfDerecha.setText(m.getDer().getNombreTecla());
        tfDisparar.setText(m.getDisparar().getNombreTecla());
        tfIzquierda.setText(m.getIzq().getNombreTecla());
        tfRecargar.setText(m.getRecargar().getNombreTecla());
    }

    /**
     * Actualizar el combo de movimientos con el movimiento pasado por parámetro
     * @param mov Movimiento que vamos a seleccionar
     */
    private void actualizarComboMovimientos(Movimientos mov) {
        cbMovimientos.getModel().setSelectedItem(mov);
    }

    /**
     * Actualizar y guardar en la DB las propiedades de la nave seleccionada.
     * Nos permite añadirle un nuevo nombre a nuestra nave además de poder cambiarle
     * el tipo de movimiento que queremos que esta tenga.
     * @param i int número de la nave. 1 ó 2
     */
    private void guardarNave(int i) {
        Nave n = naves.get(i-1);
        //actualizamos el nombre
        n.setNombre(tfNombre.getText());
        Movimientos mov = ((Movimientos)cbMovimientos.getSelectedItem());
        //actualizamos sus movimientos
        n.setMov(mov);
        dao.update(n);
        actualizarNombresNaves();
    }
    
    /**
     * Actualizará el nombre de las naves en la GUI
     */
    private void actualizarNombresNaves(){
        rbNave1.setText(naves.get(0).getNombre());
        rbNave2.setText(naves.get(1).getNombre());
    }
    
}
